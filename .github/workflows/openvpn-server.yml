name: OpenVPN Server Creator

on:
  workflow_dispatch

jobs:
  deploy-openvpn:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install OpenVPN and dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y openvpn easy-rsa

    - name: Configure OpenVPN
      run: |
        # ایجاد دایرکتوری پیکربندی
        sudo rm -rf /etc/openvpn/easy-rsa
        sudo make-cadir /etc/openvpn/easy-rsa
        cd /etc/openvpn/easy-rsa
        
        # تنظیم متغیرهای محیطی برای easy-rsa
        sudo tee vars > /dev/null << EOF
set_var EASYRSA_REQ_COUNTRY    "US"
set_var EASYRSA_REQ_PROVINCE   "California"
set_var EASYRSA_REQ_CITY       "San Francisco"
set_var EASYRSA_REQ_ORG        "GitHub OpenVPN"
set_var EASYRSA_REQ_EMAIL      "admin@github.com"
set_var EASYRSA_REQ_OU         "IT Department"
set_var EASYRSA_ALGO           "ec"
set_var EASYRSA_DIGEST         "sha512"
EOF
        
        # مقداردهی اولیه PKI
        ./easyrsa --batch init-pki
        
        # ساخت CA (با پاسخ‌های پیش‌فرض)
        ./easyrsa --batch build-ca nopass
        
        # تولید کلید سرور
        ./easyrsa --batch gen-req server nopass
        ./easyrsa --batch sign-req server server
        
        # تولید پارامترهای Diffie-Hellman
        ./easyrsa --batch gen-dh
        
        # تولید کلید TLS
        openvpn --genkey --secret pki/ta.key
        
        # ایجاد پیکربندی سرور
        sudo tee /etc/openvpn/server.conf > /dev/null << EOF
port 1194
proto udp
dev tun
ca /etc/openvpn/easy-rsa/pki/ca.crt
cert /etc/openvpn/easy-rsa/pki/issued/server.crt
key /etc/openvpn/easy-rsa/pki/private/server.key
dh /etc/openvpn/easy-rsa/pki/dh.pem
server 10.8.0.0 255.255.255.0
ifconfig-pool-persist /var/log/openvpn/ipp.txt
keepalive 10 120
tls-auth /etc/openvpn/easy-rsa/pki/ta.key 0
cipher AES-256-CBC
persist-key
persist-tun
status /var/log/openvpn/openvpn-status.log
verb 3
explicit-exit-notify 1
push "redirect-gateway def1 bypass-dhcp"
push "dhcp-option DNS 8.8.8.8"
push "dhcp-option DNS 8.8.4.4"
EOF
        
        # فعال کردن IP forwarding
        sudo sed -i 's/#net.ipv4.ip_forward=1/net.ipv4.ip_forward=1/' /etc/sysctl.conf
        sudo sysctl -p

    - name: Generate client configuration
      run: |
        cd /etc/openvpn/easy-rsa
        
        # تولید کلید کلاینت
        ./easyrsa --batch gen-req client1 nopass
        ./easyrsa --batch sign-req client client1
        
        # ایجاد پیکربندی کلاینت
        sudo tee /tmp/client.ovpn > /dev/null << 'EOF'
client
dev tun
proto udp
remote SERVER_IP SERVER_PORT
resolv-retry infinite
nobind
persist-key
persist-tun
remote-cert-tls server
cipher AES-256-CBC
verb 3
key-direction 1

<ca>
CA_CERT_CONTENT
</ca>

<cert>
CLIENT_CERT_CONTENT
</cert>

<key>
CLIENT_KEY_CONTENT
</key>

<tls-auth>
TA_KEY_CONTENT
</tls-auth>
EOF
        
        # جایگزینی محتواهای واقعی
        sudo sed -i "s/CA_CERT_CONTENT/$(sed -e 's/[\&/]/\\&/g' -e 's/$/\\n/' /etc/openvpn/easy-rsa/pki/ca.crt | tr -d '\n')/g" /tmp/client.ovpn
        sudo sed -i "s/CLIENT_CERT_CONTENT/$(sed -e 's/[\&/]/\\&/g' -e 's/$/\\n/' /etc/openvpn/easy-rsa/pki/issued/client1.crt | tr -d '\n')/g" /tmp/client.ovpn
        sudo sed -i "s/CLIENT_KEY_CONTENT/$(sed -e 's/[\&/]/\\&/g' -e 's/$/\\n/' /etc/openvpn/easy-rsa/pki/private/client1.key | tr -d '\n')/g" /tmp/client.ovpn
        sudo sed -i "s/TA_KEY_CONTENT/$(sed -e 's/[\&/]/\\&/g' -e 's/$/\\n/' /etc/openvpn/easy-rsa/pki/ta.key | tr -d '\n')/g" /tmp/client.ovpn
        
        # ذخیره پیکربندی کلاینت
        CLIENT_CONFIG=$(cat /tmp/client.ovpn)
        echo "CLIENT_CONFIG<<EOF" >> $GITHUB_ENV
        echo "$CLIENT_CONFIG" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Start OpenVPN service
      run: |
        # راه اندازی سرویس OpenVPN
        sudo systemctl start openvpn-server@server.service || true
        
        # اگر سرویس وجود ندارد، مستقیم اجرا کن
        if ! sudo systemctl is-active --quiet openvpn-server@server.service; then
          echo "Starting OpenVPN manually..."
          sudo openvpn --daemon --config /etc/openvpn/server.conf
          sleep 5
        fi
        
        # بررسی وضعیت
        if pgrep openvpn; then
          echo "OpenVPN is running"
          echo "OPENVPN_PORT=1194" >> $GITHUB_ENV
        else
          echo "OpenVPN failed to start"
          exit 1
        fi

    - name: Setup Ngrok tunnel
      run: |
        wget -q https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz
        tar -xzf ngrok-v3-stable-linux-amd64.tgz
        chmod +x ngrok
        
        ./ngrok authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
        ./ngrok udp 1194 --log=stdout > ngrok.log 2>&1 &
        sleep 10

    - name: Get connection info
      run: |
        # انتظار برای راه اندازی ngrok
        sleep 10
        
        # دریافت اطلاعات تونل
        TUNNEL_URL=$(curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[] | select(.proto == "udp") | .public_url')
        
        if [ -n "$TUNNEL_URL" ]; then
            SERVER_IP=$(echo "$TUNNEL_URL" | cut -d':' -f2 | sed 's#//##')
            SERVER_PORT=$(echo "$TUNNEL_URL" | cut -d':' -f3)
        else
            echo "Failed to get ngrok tunnel info, using defaults"
            SERVER_IP="0.udp.ngrok.io"
            SERVER_PORT="1194"
        fi
        
        echo "SERVER_IP=$SERVER_IP" >> $GITHUB_ENV
        echo "SERVER_PORT=$SERVER_PORT" >> $GITHUB_ENV

    - name: Display connection details
      run: |
        # جایگزینی آدرس سرور در پیکربندی کلاینت
        FINAL_CONFIG=$(echo "$CLIENT_CONFIG" | sed "s/SERVER_IP/$SERVER_IP/g" | sed "s/SERVER_PORT/$SERVER_PORT/g")
        
        echo "=========================================="
        echo "🚀 OpenVPN SERVER READY!"
        echo "=========================================="
        echo "Server: $SERVER_IP"
        echo "Port: $SERVER_PORT"
        echo "Protocol: UDP"
        echo ""
        echo "🔧 Client Configuration:"
        echo "Copy the content below to a file with .ovpn extension"
        echo "=========================================="
        echo "$FINAL_CONFIG"
        echo "=========================================="
        echo "⏰ This server will be active for 6 hours"
        echo "=========================================="

    - name: Keep server alive
      run: |
        echo "🟢 OpenVPN server is running for 6 hours..."
        # نگه داشتن سرور فعال به مدت 6 ساعت
        sleep 21600
