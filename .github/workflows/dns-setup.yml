name: Personal DNS Server
on:
  workflow_dispatch:

jobs:
  dns-server:
    runs-on: ubuntu-latest
    steps:
    - name: Install dnsmasq
      run: |
        sudo apt-get update
        sudo apt-get install -y dnsmasq
        echo "✅ dnsmasq installed"

    - name: Setup dnsmasq configuration
      run: |
        # ایجاد پیکربندی ساده
        sudo tee /etc/dnsmasq.conf > /dev/null << EOF
        interface=lo
        listen-address=127.0.0.1
        server=8.8.8.8
        server=1.1.1.1
        address=/steam.com/104.112.119.210
        address=/epicgames.com/104.16.109.18
        address=/origin.com/104.112.119.210
        address=/battle.net/104.16.109.18
        no-hosts
        no-resolv
        EOF

        # راه اندازی dnsmasq
        sudo systemctl restart dnsmasq
        sleep 2
        nslookup steam.com 127.0.0.1 && echo "✅ DNS working"

    - name: Download Ngrok (RDP Proven Method)
      run: |
        # روش دانلود جایگزین (مثل RDP)
        curl -o ngrok.tgz https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz || \
        wget -O ngrok.tgz https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz
        
        tar -xzf ngrok.tgz
        chmod +x ngrok
        ./ngrok version && echo "✅ Ngrok downloaded"

    - name: Setup Ngrok Authentication
      run: |
        # تنظیم authtoken (مثل RDP)
        ./ngrok authtoken "${{ secrets.NGROK_AUTH_TOKEN }}"
        echo "✅ Ngrok authenticated"

    - name: Start Ngrok Tunnel (RDP Style)
      run: |
        # روش راه اندازی تونل مثل RDP
        echo "🌐 Starting Ngrok tunnel for DNS..."
        
        # اجرای ngrok در پس‌زمینه (مثل RDP)
        nohup ./ngrok tcp 53 --log=stdout > ngrok.log 2>&1 &
        
        # منتظر ماندن برای راه اندازی
        sleep 25
        
        # بررسی وضعیت ngrok
        if ps aux | grep -q "[n]grok"; then
            echo "✅ Ngrok tunnel is running"
            
            # دریافت آدرس از log (مثل RDP)
            TUNNEL_URL=$(grep "started tunnel" ngrok.log | grep -o "url=tcp://[^ ]*" | cut -d'=' -f2 || echo "")
            
            if [ -n "$TUNNEL_URL" ]; then
                DNS_IP=$(echo "$TUNNEL_URL" | cut -d':' -f2 | sed 's#//##')
                DNS_PORT=$(echo "$TUNNEL_URL" | cut -d':' -f3)
                echo "🌐 Tunnel URL: $TUNNEL_URL"
                echo "🔢 IP: $DNS_IP"
                echo "🔌 Port: $DNS_PORT"
            else
                # استفاده از روش جایگزین
                DNS_IP="0.tcp.ngrok.io"
                DNS_PORT="53"
                echo "ℹ️ Using default ngrok address"
            fi
        else
            echo "❌ Ngrok failed to start"
            cat ngrok.log || echo "No log file"
            DNS_IP="0.tcp.ngrok.io"
            DNS_PORT="53"
        fi
        
        echo "DNS_IP=$DNS_IP" >> $GITHUB_ENV
        echo "DNS_PORT=$DNS_PORT" >> $GITHUB_ENV

    - name: Display Connection Information
      run: |
        echo "=========================================="
        echo "🎯 DNS SERVER READY - USE IN DNS CHANGER APP"
        echo "=========================================="
        echo "Primary DNS: ${{ env.DNS_IP }}"
        echo "Port: ${{ env.DNS_PORT }}"
        echo ""
        echo "📱 در اپلیکیشن DNS Changer:"
        echo "Address: ${{ env.DNS_IP }}"
        echo "Port: ${{ env.DNS_PORT }}"
        echo ""
        echo "🔧 Test: nslookup steam.com ${{ env.DNS_IP }}"
        echo "=========================================="

    - name: Keep Alive (Like RDP)
      run: |
        # روش نگهداری مانند RDP
        echo "🟢 DNS Server is running..."
        echo "💡 Press 'Cancel workflow' to stop"
        echo ""
        
        while true; do
            # تست سلامت
            if nslookup steam.com 127.0.0.1 >/dev/null 2>&1; then
                echo "✅ DNS: OK - $(date +'%H:%M:%S')"
            else
                echo "❌ DNS: Restarting..."
                sudo systemctl restart dnsmasq
            fi
            
            # بررسی ngrok
            if ! ps aux | grep -q "[n]grok"; then
                echo "🔄 Restarting ngrok..."
                pkill ngrok || true
                nohup ./ngrok tcp 53 --log=stdout > ngrok.log 2>&1 &
                sleep 15
            fi
            
            sleep 30
        done
