name: Personal DNS Server
on:
  workflow_dispatch:

jobs:
  dns-server:
    runs-on: ubuntu-latest
    steps:
    - name: Setup DNS Server
      run: |
        sudo apt-get update
        sudo apt-get install -y dnsmasq

        # ÿ™ŸàŸÇŸÅ ÿ≥ÿ±Ÿà€åÿ≥ Ÿæ€åÿ¥ ŸÅÿ±ÿ∂
        sudo systemctl stop systemd-resolved
        sudo systemctl disable systemd-resolved

        # ÿß€åÿ¨ÿßÿØ Ÿæ€å⁄©ÿ±ÿ®ŸÜÿØ€å ÿ¨ÿØ€åÿØ
        sudo tee /etc/dnsmasq.conf > /dev/null << EOF
        interface=*
        listen-address=127.0.0.1
        bind-interfaces
        server=8.8.8.8
        server=1.1.1.1
        address=/steam.com/104.112.119.210
        address=/epicgames.com/104.16.109.18
        no-hosts
        no-resolv
        cache-size=1000
        EOF

        # ÿ±ÿßŸá ÿßŸÜÿØÿßÿ≤€å ŸÖÿ¨ÿØÿØ ÿ≥ÿ±Ÿà€åÿ≥
        sudo systemctl restart dnsmasq
        sudo systemctl enable dnsmasq
        
        # ÿ®ÿ±ÿ±ÿ≥€å Ÿàÿ∂ÿπ€åÿ™ ÿ≥ÿ±Ÿà€åÿ≥
        sleep 3
        sudo systemctl status dnsmasq --no-pager
        echo "‚úÖ DNS Server configured successfully!"

    - name: Verify DNS is working
      run: |
        # ÿ™ÿ≥ÿ™ DNS ÿ≥ÿ±Ÿàÿ±
        nslookup steam.com 127.0.0.1
        nslookup epicgames.com 127.0.0.1
        echo "‚úÖ DNS queries are working!"

    - name: Setup Ngrok Tunnel
      run: |
        # ÿØÿßŸÜŸÑŸàÿØ Ÿà ÿ™ŸÜÿ∏€åŸÖ Ngrok
        wget -q https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz
        tar -xzf ngrok-v3-stable-linux-amd64.tgz
        chmod +x ngrok
        
        ./ngrok authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
        
        # ÿ±ÿßŸá ÿßŸÜÿØÿßÿ≤€å ÿ™ŸàŸÜŸÑ ÿ®ÿ±ÿß€å ŸæŸàÿ±ÿ™ 53
        ./ngrok tcp 53 --log=stdout > ngrok.log &
        sleep 15
        
        # ÿØÿ±€åÿßŸÅÿ™ ÿßÿ∑ŸÑÿßÿπÿßÿ™ ÿ™ŸàŸÜŸÑ
        TUNNEL_INFO=$(curl -s http://localhost:4040/api/tunnels || echo "")
        if [ -n "$TUNNEL_INFO" ]; then
            TUNNEL_URL=$(echo $TUNNEL_INFO | jq -r '.tunnels[0].public_url' 2>/dev/null || echo "")
            if [ -n "$TUNNEL_URL" ]; then
                DNS_IP=$(echo $TUNNEL_URL | cut -d':' -f2 | sed 's#//##')
                DNS_PORT=$(echo $TUNNEL_URL | cut -d':' -f3)
                echo "üåê DNS Tunnel Established!"
                echo "üî¢ IP Address: $DNS_IP"
                echo "üîå Port: $DNS_PORT"
                echo "DNS_IP=$DNS_IP" >> $GITHUB_ENV
                echo "DNS_PORT=$DNS_PORT" >> $GITHUB_ENV
            else
                echo "‚ö†Ô∏è Could not parse tunnel information"
                echo "Tunnel info: $TUNNEL_INFO"
            fi
        else
            echo "‚ö†Ô∏è Could not get tunnel information"
        fi

    - name: Display Connection Info
      run: |
        echo "=========================================="
        echo "‚úÖ PERSONAL DNS SERVER IS READY!"
        echo "=========================================="
        if [ -n "${{ env.DNS_IP }}" ]; then
            echo "üî¢ DNS IP: ${{ env.DNS_IP }}"
            echo "üîå DNS Port: ${{ env.DNS_PORT }}"
            echo "üì± Use this in your DNS changer app:"
            echo "Primary DNS: ${{ env.DNS_IP }}"
        else
            echo "‚ö†Ô∏è Could not get DNS IP. Check ngrok connection."
        fi
        echo "=========================================="

    - name: Keep alive
      run: |
        echo "üü¢ DNS Server is running..."
        echo "‚è∞ Press Ctrl+C in log to stop the workflow"
        # ŸÜ⁄ØŸáÿØÿßÿ±€å ÿßÿ¨ÿ±ÿß
        while true; do
            echo "‚úÖ Still running at $(date +'%H:%M:%S')"
            sleep 60
        done
