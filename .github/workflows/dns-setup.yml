name: Personal DNS Server
on:
  workflow_dispatch:

jobs:
  dns-server:
    runs-on: ubuntu-latest
    steps:
    - name: Install Docker and dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y docker.io curl

    - name: Create dnsmasq configuration
      run: |
        # ایجاد فایل پیکربندی dnsmasq
        cat > dnsmasq.conf << EOF
        interface=*
        listen-address=0.0.0.0
        bind-interfaces
        server=8.8.8.8
        server=1.1.1.1
        address=/steam.com/104.112.119.210
        address=/epicgames.com/104.16.109.18
        address=/origin.com/104.112.119.210
        address=/battle.net/104.16.109.18
        no-hosts
        no-resolv
        cache-size=1000
        EOF

    - name: Run dnsmasq in Docker
      run: |
        # توقف containerهای قبلی
        sudo docker rm -f dns-server 2>/dev/null || true
        
        # اجرای dnsmasq در Docker
        sudo docker run -d \
          --name dns-server \
          --restart unless-stopped \
          -p 53:53/udp \
          -p 53:53/tcp \
          -v $(pwd)/dnsmasq.conf:/etc/dnsmasq.conf \
          --cap-add=NET_ADMIN \
          ubuntu/dnsmasq:latest \
          -d -q \
          --log-facility=- \
          --conf-file=/etc/dnsmasq.conf

        sleep 5
        echo "✅ DNS server is running in Docker"

    - name: Test DNS server
      run: |
        # تست DNS سرور
        echo "Testing DNS server..."
        nslookup steam.com 127.0.0.1 && echo "✅ Steam DNS working!"
        nslookup epicgames.com 127.0.0.1 && echo "✅ Epic Games DNS working!"
        nslookup google.com 127.0.0.1 && echo "✅ General DNS working!"

    - name: Download and setup Ngrok
      run: |
        # دانلود ngrok
        wget -q https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz
        tar -xzf ngrok-v3-stable-linux-amd64.tgz
        chmod +x ngrok
        
        # تنظیم auth token
        ./ngrok authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
        
        # راه اندازی تونل برای پورت 53
        ./ngrok tcp 53 --log=stdout > ngrok.log 2>&1 &
        echo "🔄 Starting ngrok tunnel..."
        sleep 20

    - name: Get connection information
      run: |
        # دریافت اطلاعات تونل
        echo "Getting tunnel information..."
        
        # روش اول: استفاده از API
        TUNNEL_INFO=$(curl -s http://localhost:4040/api/tunnels || echo "{}")
        TUNNEL_URL=$(echo "$TUNNEL_INFO" | grep -o 'tcp://[^"]*' | head -n 1 || echo "")
        
        if [ -n "$TUNNEL_URL" ]; then
            DNS_IP=$(echo "$TUNNEL_URL" | cut -d':' -f2 | sed 's#//##')
            DNS_PORT=$(echo "$TUNNEL_URL" | cut -d':' -f3)
        else
            # روش دوم: استفاده از log file
            echo "Using alternative method to get tunnel info..."
            DNS_IP=$(grep -o "url=tcp://[^ ]*" ngrok.log | head -1 | cut -d':' -f2 | sed 's#//##' || echo "0.tcp.ngrok.io")
            DNS_PORT=$(grep -o "url=tcp://[^ ]*" ngrok.log | head -1 | cut -d':' -f3 | cut -d' ' -f1 || echo "53")
        fi
        
        echo "🌐 DNS_IP=$DNS_IP"
        echo "🔌 DNS_PORT=$DNS_PORT"
        echo "DNS_IP=$DNS_IP" >> $GITHUB_ENV
        echo "DNS_PORT=$DNS_PORT" >> $GITHUB_ENV

    - name: Display connection info
      run: |
        echo "=========================================="
        echo "🎯 YOUR PERSONAL DNS SERVER IS READY!"
        echo "=========================================="
        echo "🔢 DNS IP: ${{ env.DNS_IP }}"
        echo "🔌 DNS Port: ${{ env.DNS_PORT }}"
        echo ""
        echo "📱 در اپلیکیشن DNS Changer گوشی:"
        echo "Primary DNS: ${{ env.DNS_IP }}"
        echo "Port: ${{ env.DNS_PORT }}"
        echo ""
        echo "🔧 Test connection:"
        echo "nslookup steam.com ${{ env.DNS_IP }}"
        echo "=========================================="

    - name: Keep alive and monitor
      run: |
        echo "🟢 DNS Server is running..."
        echo "💡 Press the 'Cancel workflow' button in GitHub to stop"
        echo ""
        
        COUNTER=0
        while true; do
            COUNTER=$((COUNTER + 1))
            echo "⏰ Running for $((COUNTER * 30)) seconds..."
            
            # تست سلامت DNS
            if nslookup steam.com 127.0.0.1 >/dev/null 2>&1; then
                echo "✅ DNS Server: Healthy"
            else
                echo "❌ DNS Server: Not responding - restarting..."
                sudo docker restart dns-server
                sleep 5
            fi
            
            # تست سلامت Ngrok
            if curl -s http://localhost:4040 >/dev/null 2>&1; then
                echo "✅ Ngrok Tunnel: Active"
            else
                echo "❌ Ngrok Tunnel: Down - restarting..."
                pkill ngrok || true
                ./ngrok tcp 53 --log=stdout > ngrok.log 2>&1 &
                sleep 15
            fi
            
            sleep 30
        done
